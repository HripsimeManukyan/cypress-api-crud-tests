{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2025-05-19T13:49:39.335Z",
    "end": "2025-05-19T13:49:42.861Z",
    "duration": 3526,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9d9d63d9-40fb-403c-b3f4-72ed3d6986cf",
      "title": "",
      "fullFile": "cypress\\e2e\\api\\users.cy.js",
      "file": "cypress\\e2e\\api\\users.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e29fa0ad-05a4-4c9a-bd50-e70cae940d5f",
          "title": "GoRest Users API – Cypress Request Portfolio Demo",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET /users - validate list",
              "fullTitle": "GoRest Users API – Cypress Request Portfolio Demo GET /users - validate list",
              "timedOut": null,
              "duration": 971,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('/users').then(resp => {\n  expect(resp.status).to.eq(200);\n  expect(resp.body).to.be.an('array');\n  expect(resp.body.length).to.be.greaterThan(0);\n});",
              "err": {},
              "uuid": "239bea32-3c61-4429-9ff5-fc33462b3b08",
              "parentUUID": "e29fa0ad-05a4-4c9a-bd50-e70cae940d5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /users - create user (valid data)",
              "fullTitle": "GoRest Users API – Cypress Request Portfolio Demo POST /users - create user (valid data)",
              "timedOut": null,
              "duration": 377,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('user').then(user => {\n  user.email = `portfolio_${Date.now()}@example.com`;\n  cy.gorestAuthHeaders().then(headers => {\n    cy.request({\n      method: 'POST',\n      url: '/users',\n      headers,\n      body: user,\n      failOnStatusCode: false\n    }).then(resp => {\n      expect(resp.status).to.eq(201);\n      expect(resp.body).to.have.property('id');\n      expect(resp.body).to.have.property('email', user.email);\n      createdUserId = resp.body.id;\n    });\n  });\n});",
              "err": {},
              "uuid": "2bdeb0fd-0647-4f39-b44f-f77c4f25506c",
              "parentUUID": "e29fa0ad-05a4-4c9a-bd50-e70cae940d5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /users - should fail with invalid email",
              "fullTitle": "GoRest Users API – Cypress Request Portfolio Demo POST /users - should fail with invalid email",
              "timedOut": null,
              "duration": 340,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.gorestAuthHeaders().then(headers => {\n  cy.request({\n    method: 'POST',\n    url: '/users',\n    headers,\n    body: {\n      name: 'Invalid User',\n      gender: 'male',\n      email: 'not-an-email',\n      status: 'active'\n    },\n    failOnStatusCode: false\n  }).then(resp => {\n    expect(resp.status).to.eq(422);\n    expect(resp.body[0]).to.have.property('field', 'email');\n  });\n});",
              "err": {},
              "uuid": "66ef242b-9238-42c6-99e7-3a945f1c30f4",
              "parentUUID": "e29fa0ad-05a4-4c9a-bd50-e70cae940d5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT /users/:id - update created user",
              "fullTitle": "GoRest Users API – Cypress Request Portfolio Demo PUT /users/:id - update created user",
              "timedOut": null,
              "duration": 366,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.gorestAuthHeaders().then(headers => {\n  cy.request({\n    method: 'PUT',\n    url: `/users/${createdUserId}`,\n    headers,\n    body: {\n      name: 'Updated Portfolio User'\n    }\n  }).then(resp => {\n    expect(resp.status).to.eq(200);\n    expect(resp.body.name).to.eq('Updated Portfolio User');\n  });\n});",
              "err": {},
              "uuid": "864b793d-6c06-4fdb-ab83-3ff1a3bbc764",
              "parentUUID": "e29fa0ad-05a4-4c9a-bd50-e70cae940d5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE /users/:id - delete created user",
              "fullTitle": "GoRest Users API – Cypress Request Portfolio Demo DELETE /users/:id - delete created user",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.gorestAuthHeaders().then(headers => {\n  cy.request({\n    method: 'DELETE',\n    url: `/users/${createdUserId}`,\n    headers\n  }).then(resp => {\n    expect(resp.status).to.eq(204);\n  });\n});",
              "err": {},
              "uuid": "8cdcc5bb-aa16-4043-b0e6-869087363ca2",
              "parentUUID": "e29fa0ad-05a4-4c9a-bd50-e70cae940d5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE /users/:id - 404 for already deleted user",
              "fullTitle": "GoRest Users API – Cypress Request Portfolio Demo DELETE /users/:id - 404 for already deleted user",
              "timedOut": null,
              "duration": 361,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.gorestAuthHeaders().then(headers => {\n  cy.request({\n    method: 'DELETE',\n    url: `/users/${createdUserId}`,\n    headers,\n    failOnStatusCode: false\n  }).then(resp => {\n    expect(resp.status).to.eq(404);\n  });\n});",
              "err": {},
              "uuid": "a5fcd031-1470-4cab-8c40-6a558bc02cc5",
              "parentUUID": "e29fa0ad-05a4-4c9a-bd50-e70cae940d5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /users - validate the response",
              "fullTitle": "GoRest Users API – Cypress Request Portfolio Demo GET /users - validate the response",
              "timedOut": null,
              "duration": 435,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('/users').then(resp => {\n  expect(resp.status).to.eq(200);\n});",
              "err": {},
              "uuid": "57caba86-fe0c-4a77-8ccf-b8cce7b25c77",
              "parentUUID": "e29fa0ad-05a4-4c9a-bd50-e70cae940d5f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "239bea32-3c61-4429-9ff5-fc33462b3b08",
            "2bdeb0fd-0647-4f39-b44f-f77c4f25506c",
            "66ef242b-9238-42c6-99e7-3a945f1c30f4",
            "864b793d-6c06-4fdb-ab83-3ff1a3bbc764",
            "8cdcc5bb-aa16-4043-b0e6-869087363ca2",
            "a5fcd031-1470-4cab-8c40-6a558bc02cc5",
            "57caba86-fe0c-4a77-8ccf-b8cce7b25c77"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3197,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}